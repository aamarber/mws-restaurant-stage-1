{"version":3,"sources":["../js/restaurant_info.js"],"names":["restaurant","map","dbHelper","DBHelper","window","location","hostname","port","document","addEventListener","event","fetchRestaurantFromURL","initServiceWorker","navigator","serviceWorker","register","then","registration","catch","err","initMap","error","console","self","google","maps","Map","getElementById","zoom","center","latlng","scrollwheel","fillBreadcrumb","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","name","innerHTML","address","fillRestaurantPicture","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","picture","className","altText","image_large","createElement","setAttribute","imageUrlForRestaurant","image_medium","image","appendChild","operatingHours","hours","key","row","day","time","reviews","container","title","noReviews","reviewsList","forEach","createReviewHTML","review","li","reviewArticle","reviewHeader","date","rating","comments","breadcrumb","url","href","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\r\nvar map;\r\nconst dbHelper = new DBHelper(window.location.hostname, window.location.port);\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  fetchRestaurantFromURL();\r\n  initServiceWorker();\r\n});\r\n\r\nlet initServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\r\n        // Registration was successful\r\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }).catch(function (err) {\r\n        // registration failed :(\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nlet initMap = () => {\r\n  fetchRestaurantFromURL((error, restaurant) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.map = new google.maps.Map(document.getElementById('map'), {\r\n        zoom: 16,\r\n        center: restaurant.latlng,\r\n        scrollwheel: false\r\n      });\r\n      fillBreadcrumb();\r\n      dbHelper.mapMarkerForRestaurant(self.restaurant, self.map);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Get current restaurant from page URL.\r\n */\r\nlet fetchRestaurantFromURL = (callback) => {\r\n  if (self.restaurant) { // restaurant already fetched!\r\n    callback(null, self.restaurant)\r\n    return;\r\n  }\r\n  const id = getParameterByName('id');\r\n  if (!id) { // no id found in URL\r\n    error = 'No restaurant id in URL'\r\n    callback(error, null);\r\n  } else {\r\n    dbHelper.fetchRestaurantById(id, (error, restaurant) => {\r\n      self.restaurant = restaurant;\r\n      if (!restaurant) {\r\n        console.error(error);\r\n        return;\r\n      }\r\n      fillRestaurantHTML();\r\n\r\n      if (!callback) {\r\n        return;\r\n      }\r\n\r\n      callback(null, restaurant)\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\r\nlet fillRestaurantHTML = (restaurant = self.restaurant) => {\r\n  const name = document.getElementById('restaurant-name');\r\n  name.innerHTML = restaurant.name;\r\n\r\n  const address = document.getElementById('restaurant-address');\r\n  address.innerHTML = restaurant.address;\r\n\r\n  fillRestaurantPicture(restaurant);\r\n\r\n  const cuisine = document.getElementById('restaurant-cuisine');\r\n  cuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n  // fill operating hours\r\n  if (restaurant.operating_hours) {\r\n    fillRestaurantHoursHTML();\r\n  }\r\n  // fill reviews\r\n  fillReviewsHTML();\r\n}\r\n\r\nlet fillRestaurantPicture = (restaurant) => {\r\n  const picture = document.getElementById('restaurant-img');\r\n  picture.className = 'restaurant-img'\r\n  const altText = `Image of restaurant ${restaurant.name}`;\r\n  const image_large = document.createElement('source');\r\n  image_large.setAttribute('media', '(min-width: 1000px)');\r\n  image_large.setAttribute('srcset', dbHelper.imageUrlForRestaurant(restaurant, 'large'));\r\n  image_large.setAttribute('alt', altText);\r\n\r\n  const image_medium = document.createElement('source');\r\n  image_medium.setAttribute('media', '(min-width: 650px)');\r\n  image_medium.setAttribute('srcset', dbHelper.imageUrlForRestaurant(restaurant, 'medium'));\r\n  image_medium.setAttribute('alt', altText);\r\n\r\n  const image = document.createElement('img');\r\n  image.setAttribute('srcset', dbHelper.imageUrlForRestaurant(restaurant, 'small'));\r\n  image.setAttribute('src', dbHelper.imageUrlForRestaurant(restaurant, 'small'));\r\n  image.setAttribute('alt', altText);\r\n\r\n  picture.appendChild(image_large);\r\n  picture.appendChild(image_medium);\r\n  picture.appendChild(image);\r\n}\r\n\r\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\r\nlet fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n  const hours = document.getElementById('restaurant-hours');\r\n  for (let key in operatingHours) {\r\n    const row = document.createElement('tr');\r\n\r\n    const day = document.createElement('td');\r\n    day.innerHTML = key;\r\n    day.className = 'restaurant-day';\r\n    row.appendChild(day);\r\n\r\n    const time = document.createElement('td');\r\n    time.innerHTML = operatingHours[key];\r\n    time.className = 'restaurant-time';\r\n    row.appendChild(time);\r\n\r\n    hours.appendChild(row);\r\n  }\r\n}\r\n\r\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\r\nlet fillReviewsHTML = (reviews = self.restaurant.reviews) => {\r\n  const container = document.getElementById('reviews-container');\r\n  const title = document.createElement('h3');\r\n  title.innerHTML = 'Reviews';\r\n  container.appendChild(title);\r\n\r\n  if (!reviews) {\r\n    const noReviews = document.createElement('p');\r\n    noReviews.innerHTML = 'No reviews yet!';\r\n    container.appendChild(noReviews);\r\n    return;\r\n  }\r\n\r\n  const reviewsList = document.createElement('ul');\r\n  reviewsList.className = 'reviews-list';\r\n\r\n  reviews.forEach(review => {\r\n    reviewsList.appendChild(createReviewHTML(review));\r\n  });\r\n  container.appendChild(reviewsList);\r\n}\r\n\r\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\r\nlet createReviewHTML = (review) => {\r\n\r\n  const li = document.createElement('li');\r\n  li.className = 'review';\r\n\r\n  const reviewArticle = document.createElement('article');\r\n  \r\n  li.appendChild(reviewArticle);\r\n\r\n  const reviewHeader = document.createElement('div');\r\n  reviewHeader.className = 'review-header';\r\n  reviewArticle.appendChild(reviewHeader);\r\n\r\n  const name = document.createElement('h3');\r\n  name.innerHTML = review.name;\r\n  reviewHeader.appendChild(name);\r\n\r\n  const date = document.createElement('h4');\r\n  date.innerHTML = review.date;\r\n  reviewHeader.appendChild(date);\r\n\r\n  const rating = document.createElement('p');\r\n  rating.innerHTML = `Rating: ${review.rating}`;\r\n  rating.className = 'review-rating';\r\n  reviewArticle.appendChild(rating);\r\n\r\n  const comments = document.createElement('p');\r\n  comments.innerHTML = review.comments;\r\n  reviewArticle.appendChild(comments);\r\n\r\n  return li;\r\n}\r\n\r\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\r\nlet fillBreadcrumb = (restaurant = self.restaurant) => {\r\n  const breadcrumb = document.getElementById('breadcrumb');\r\n  const li = document.createElement('li');\r\n  li.innerHTML = restaurant.name;\r\n  breadcrumb.appendChild(li);\r\n}\r\n\r\n/**\r\n * Get a parameter by name from page URL.\r\n */\r\nlet getParameterByName = (name, url) => {\r\n  if (!url)\r\n    url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n    results = regex.exec(url);\r\n  if (!results)\r\n    return null;\r\n  if (!results[2])\r\n    return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n"]}